{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dataset-details/dataset-details.component.html","webpack:///./src/app/dataset-details/dataset-details.component.scss","webpack:///./src/app/dataset-details/dataset-details.component.ts","webpack:///./src/app/datasets-overview/datasets-overview.component.html","webpack:///./src/app/datasets-overview/datasets-overview.component.scss","webpack:///./src/app/datasets-overview/datasets-overview.component.ts","webpack:///./src/app/describe/describe.component.html","webpack:///./src/app/describe/describe.component.scss","webpack:///./src/app/describe/describe.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/main-nav/main-nav.component.css","webpack:///./src/app/main-nav/main-nav.component.html","webpack:///./src/app/main-nav/main-nav.component.ts","webpack:///./src/app/sparql/sparql.component.html","webpack:///./src/app/sparql/sparql.component.scss","webpack:///./src/app/sparql/sparql.component.ts","webpack:///./src/datasets-info.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/sparql.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DatasetsOverviewComponent } from './datasets-overview/datasets-overview.component';\nimport { DatasetDetailsComponent } from './dataset-details/dataset-details.component';\nimport { SparqlComponent } from './sparql/sparql.component';\nimport { DescribeComponent } from './describe/describe.component';\n\nconst routes: Routes = [\n  { path: '', component: DatasetsOverviewComponent},\n  { path: 'sparql', component: SparqlComponent},\n  { path: 'dataset/:datasetId', component: DatasetDetailsComponent},\n  { path: 'describe', component: DescribeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-main-nav></app-main-nav>\\n<!-- Main component -->\\n<div fxLayout=\\\"column\\\" class=\\\"mat-typography\\\">\\n  <router-outlet ></router-outlet>\\n  <app-footer fxFlexOffset=\\\"auto\\\"></app-footer>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { DatasetsInfoService } from '../datasets-info.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'rdf-graph-explorer';\n\n  constructor(private datasetsInfo: DatasetsInfoService) { }\n\n  applyFilterNav(filterValue: string) {\n    this.datasetsInfo.arrayDatasetsNav = Object.keys(this.datasetsInfo.hashAll);\n\n    this.datasetsInfo.arrayDatasetsNav = this.datasetsInfo.arrayDatasetsNav\n      .filter(item => item.includes(filterValue.trim().toLowerCase()));\n    console.log('after filter');\n    console.log(this.datasetsInfo.arrayDatasetsNav);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n// Deactivate animations: import {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatProgressSpinnerModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatSortModule,\n  MatTableModule,\n  MatCheckboxModule, MatSidenavModule, MatListModule,\n  MatExpansionModule, MatTabsModule\n} from '@angular/material';\nimport 'angular2-navigate-with-data';\nimport { CytoscapeModule } from 'ngx-cytoscape';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DatasetsOverviewComponent } from './datasets-overview/datasets-overview.component';\nimport { DatasetDetailsComponent } from './dataset-details/dataset-details.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { SparqlComponent } from './sparql/sparql.component';\nimport { DescribeComponent } from './describe/describe.component';\nimport { FooterComponent } from './footer/footer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DatasetsOverviewComponent,\n    DatasetDetailsComponent,\n    MainNavComponent,\n    SparqlComponent,\n    DescribeComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTableModule,\n    MatCheckboxModule,\n    LayoutModule,\n    MatSidenavModule,\n    MatListModule,\n    MatExpansionModule,\n    MatTabsModule,\n    CytoscapeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"mainLayout\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n  <div class=\\\"container\\\"  fxLayout=\\\"column\\\" fxFlex=\\\"70%\\\" fxFlex.xs=\\\"100%\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" style=\\\"text-align: left;\\\"\\n  *ngIf=\\\"datasetsInfo.datasetSelected != undefined\\\">\\n\\n<!-- <div class=\\\"mainLayout\\\" style=\\\"text-align: left;\\\" fxLayout=\\\"column\\\" fxLayoutWrap\\n*ngIf=\\\"datasetsInfo.datasetSelected != undefined\\\"> -->\\n<!-- <div class=\\\"mainLayout\\\" style=\\\"text-align: left;\\\" fxLayout=\\\"column\\\" fxLayoutWrap> -->\\n    <h1 class=\\\"mat-display-1\\\" style=\\\"text-align: center; padding-bottom: 15px\\\">\\n      {{ datasetsInfo.datasetSelected.source.value }}\\n    </h1>\\n\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\n      {{ datasetsInfo.datasetSelected.description.value }}\\n      <p style=\\\"margin-top: 15px;\\\">\\n        Generated on: {{datasetsInfo.datasetSelected.displayDateGenerated}}\\n      </p>\\n      <p>\\n        Homepage: <a href=\\\"{{datasetsInfo.datasetSelected.homepage.value}}\\\">{{datasetsInfo.datasetSelected.homepage.value}}</a>\\n      </p>\\n    </mat-card>\\n\\n    <!-- <div fxLayout=\\\"row\\\" fxFlex.md=\\\"70\\\" fxLayoutWrap class=\\\"card-deck-container mat-elevation-z4\\\"> -->\\n    <div fxLayout=\\\"row\\\" fxLayoutWrap>\\n      <div fxFlex *ngFor=\\\"let countInGraph of ['statements', 'entities', 'properties', 'classes']\\\" class=\\\"card-item\\\">\\n        <mat-card class=\\\"mat-elevation-z8\\\">\\n          <mat-card-title class=\\\"md-card-title\\\">{{datasetsInfo.datasetSelected[countInGraph].value}}</mat-card-title>\\n          <div class=\\\"card-text-content\\\">\\n            {{countInGraph}}\\n          </div>    \\n        </mat-card>\\n      </div>\\n    </div>\\n\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\n      <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilterRelationsTable($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n      </mat-form-field>\\n\\n      <!-- <mat-table #table [dataSource]=\\\"datasetsInfo.hashAll[datasetsInfo.datasetSelected.source.value].relationsTableDataSource\\\" matSort> -->\\n      <mat-table #table [dataSource]=\\\"datasetsInfo.datasetSelected.relationsTableDataSource\\\" matSort>\\n        <ng-container matColumnDef=\\\"{{column.id}}\\\" *ngFor=\\\"let column of columnNames\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> {{column.value}} </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">\\n            {{element[column.id]}}\\n            <!-- <a fxFlexFill [routerLink]=\\\"'/dataset/'+element[column.id]\\\" class=\\\"mat-row-link\\\"></a> -->\\n          </mat-cell>\\n        </ng-container>\\n\\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns ->\\n        <ng-container matColumnDef=\\\"expandedDetail\\\">\\n          <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\n            <div class=\\\"example-element-detail\\\"\\n                [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n              <div class=\\\"example-element-diagram\\\">\\n                <div class=\\\"example-element-position\\\"> {{element.description.value}} </div>\\n                <div class=\\\"example-element-symbol\\\"> {{element.symbol}} </div>\\n                <div class=\\\"example-element-name\\\"> {{element.name}} </div>\\n                <div class=\\\"example-element-weight\\\"> {{element.weight}} </div>\\n              </div>\\n              <div class=\\\"example-element-description\\\">\\n                {{element.description}}\\n                <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span>\\n              </div>\\n            </div>\\n          </td>\\n        </ng-container-->\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n          <!-- (click)=\\\"datasetsInfo.navigateTo(row.datasetId)\\\"></mat-row> -->\\n      </mat-table>\\n    </mat-card>\\n\\n    <mat-card style=\\\"margin-top: 15px; height: 500px;\\\">\\n      <ngx-cytoscape [elements]=\\\"datasetsInfo.datasetSelected.ngxGraph\\\"></ngx-cytoscape>\\n    </mat-card>\\n  </div>\\n</div>\"","module.exports = \".card-item {\\n  padding: 3px 3px 3px 3px; }\\n\\nngx-cytoscape {\\n  height: 50vh;\\n  float: left;\\n  position: relative;\\n  border: solid #21c0c0;\\n  width: 50em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlbW9uZXQva3Jha2VuL3JkZi1ncmFwaC1leHBsb3Jlci9zcmMvYXBwL2RhdGFzZXQtZGV0YWlscy9kYXRhc2V0LWRldGFpbHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx3QkFBd0IsRUFBQTs7QUFNMUI7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGF0YXNldC1kZXRhaWxzL2RhdGFzZXQtZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWl0ZW0ge1xuICBwYWRkaW5nOiAzcHggM3B4IDNweCAzcHg7XG59XG5cblxuXG4vLyBuZ3gtZ3JhcGggQ1NTXG5uZ3gtY3l0b3NjYXBlIHtcbiAgaGVpZ2h0OiA1MHZoO1xuICBmbG9hdDogbGVmdDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXI6IHNvbGlkICMyMWMwYzA7XG4gIHdpZHRoOiA1MGVtO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSort } from '@angular/material';\n\nimport { DatasetsInfoService } from '../../datasets-info.service';\nimport { SparqlService } from '../../sparql.service';\n\n@Component({\n  selector: 'app-dataset-details',\n  templateUrl: './dataset-details.component.html',\n  styleUrls: ['./dataset-details.component.scss'],\n})\nexport class DatasetDetailsComponent implements OnInit {\n\n  displayedColumns = [];\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatSort) set matSort(ms: MatSort) {\n    this.sort = ms;\n  }\n\n  graphData = {\n      nodes: [\n          {data: {id: 'j', name: 'Jerry', faveColor: '#6FB1FC', faveShape: 'triangle'}},\n          {data: {id: 'e', name: 'Elaine', faveColor: '#EDA1ED', faveShape: 'ellipse'}},\n          {data: {id: 'k', name: 'Kramer', faveColor: '#86B342', faveShape: 'octagon'}},\n          {data: {id: 'g', name: 'George', faveColor: '#F5A45D', faveShape: 'rectangle'}}\n      ],\n      edges: [\n          {data: {source: 'j', target: 'e', faveColor: '#6FB1FC'}},\n          {data: {source: 'j', target: 'k', faveColor: '#6FB1FC'}},\n          {data: {source: 'j', target: 'g', faveColor: '#6FB1FC'}},\n          {data: {source: 'e', target: 'j', faveColor: '#EDA1ED'}},\n          {data: {source: 'e', target: 'k', faveColor: '#EDA1ED'}},\n          {data: {source: 'k', target: 'j', faveColor: '#86B342'}},\n          {data: {source: 'k', target: 'e', faveColor: '#86B342'}},\n          {data: {source: 'k', target: 'g', faveColor: '#86B342'}},\n          {data: {source: 'g', target: 'j', faveColor: '#F5A45D'}}\n      ]\n  };\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private sparql: SparqlService,\n    private datasetsInfo: DatasetsInfoService) { }\n\n  columnNames = [\n    { id: 'classCount1', value: '# of instance of subject' },\n    { id: 'class1', value: 'Subject class' },\n    { id: 'relationWith', value: 'Have relation with' },\n    { id: 'class2', value: 'Object class' },\n    { id: 'classCount2', value: '# of instance of object' }];\n\n  ngOnInit() {\n    this.displayedColumns = this.columnNames.map(x => x.id);\n    console.log('before ngOnInit dataset-detail. getNavigatedData:');\n    // Trying to get data through the router to avoid doing useless calls:\n    // this.route\n    //   .data\n    //   .subscribe(v => this.datasetsInfo = v.datasetsInfo);\n    // const navigatedData = this.router.getNavigatedData();\n    // console.log(navigatedData);\n    // if (navigatedData == null) {\n    //   // Execute SPARQL query to get datasets infos\n    //   console.log('no navigatedData. execute sparql');\n    //   this.sparql.getAllDatasetsInfo(null, this, this.route.snapshot.paramMap.get('datasetId'));\n    // } else {\n    //   // Get datasets infos from data passed through router\n    //   this.datasetsInfo = navigatedData;\n    // }\n    this.sparql.getAllDatasetsInfo(null, this, this.route.snapshot.paramMap.get('datasetId'));\n    if (this.datasetsInfo.datasetSelected !== undefined) {\n      this.datasetsInfo.datasetSelected.relationsTableDataSource.sort = this.sort;\n      console.log('ngOnInit dataset-details: datasetSelected.relationsTableDataSource sorted');\n    } else {\n      console.log('ngOnInit dataset-details: datasetSelected undefined');\n    }\n    console.log('after ngOnInit dataset-detail. datasetsInfo:')\n    console.log(this.datasetsInfo);\n  }\n\n  applyFilterRelationsTable(filterValue: string) {\n    this.datasetsInfo.datasetSelected.relationsTableDataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","module.exports = \"<div class=\\\"mainLayout\\\" style=\\\"margin-right: 20px; margin-left: 20px;\\\">\\n  <h1 class=\\\"mat-display-1\\\" style=\\\"padding-bottom: 15px;\\\">\\n    Overview of ncats-red-kg datasets\\n  </h1>\\n\\n  <mat-card class=\\\"mat-elevation-z6\\\">\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilterTable($event.target.value)\\\" placeholder=\\\"Filter\\\"/>\\n    </mat-form-field>\\n\\n    <mat-table #table [dataSource]=\\\"datasetsInfo.datasetsTableDataSource\\\" matSort>\\n      <ng-container matColumnDef=\\\"{{column.id}}\\\" *ngFor=\\\"let column of columnNames\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> {{column.value}} </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">\\n          {{element[column.id]}}\\n          <!-- <a fxFlexFill [routerLink]=\\\"'/dataset/'+element[column.id]\\\" class=\\\"mat-row-link\\\"></a> -->\\n        </mat-cell>\\n      </ng-container>\\n\\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns ->\\n      <ng-container matColumnDef=\\\"expandedDetail\\\">\\n        <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\n          <div class=\\\"example-element-detail\\\"\\n              [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n            <div class=\\\"example-element-diagram\\\">\\n              <div class=\\\"example-element-position\\\"> {{element.description.value}} </div>\\n              <div class=\\\"example-element-symbol\\\"> {{element.symbol}} </div>\\n              <div class=\\\"example-element-name\\\"> {{element.name}} </div>\\n              <div class=\\\"example-element-weight\\\"> {{element.weight}} </div>\\n            </div>\\n            <div class=\\\"example-element-description\\\">\\n              {{element.description}}\\n              <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span>\\n            </div>\\n          </div>\\n        </td>\\n      </ng-container-->\\n\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" \\n        (click)=\\\"datasetsInfo.navigateTo(row.datasetId)\\\"\\n        matTooltip=\\\"{{datasetsInfo.hashAll[row['datasetId']].description.value}}\\\"\\n        aria-label=\\\"displays a tooltip\\\"></mat-row>\\n    </mat-table>\\n  </mat-card>\\n\\n</div>\"","module.exports = \".mat-row:hover {\\n  background: #efefef;\\n  cursor: pointer; }\\n\\ntable {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n/deep/ .mat-tooltip {\\n  font-size: 12px;\\n  max-width: 700px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlbW9uZXQva3Jha2VuL3JkZi1ncmFwaC1leHBsb3Jlci9zcmMvYXBwL2RhdGFzZXRzLW92ZXJ2aWV3L2RhdGFzZXRzLW92ZXJ2aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUliO0VBQ0UsZUFBZTtFQUNmLDJCQUEyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGF0YXNldHMtb3ZlcnZpZXcvZGF0YXNldHMtb3ZlcnZpZXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBIaWdobGlnaHQgcm93IHdoZW4gaG92ZXJcbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2VmZWZlZjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vLyBVc2UgL2RlZXAvIHRvIG92ZXJyaWRlIG1hdGVyaWFsXG4vZGVlcC8gLm1hdC10b29sdGlwIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBtYXgtd2lkdGg6IDcwMHB4ICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material';\n\nimport { DatasetsInfoService } from '../../datasets-info.service';\nimport { SparqlService } from '../../sparql.service';\n\n@Component({\n  selector: 'app-datasets-overview',\n  templateUrl: './datasets-overview.component.html',\n  styleUrls: ['./datasets-overview.component.scss'],\n})\nexport class DatasetsOverviewComponent implements OnInit {\n\n  displayedColumns = [];\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private sparql: SparqlService,\n    private datasetsInfo: DatasetsInfoService) { }\n\n  columnNames = [\n    { id: 'datasetId', value: 'Dataset' }, \n    { id: 'dateGenerated', value: 'Date generated' },\n    { id: 'triples', value: '# of triples' },\n    { id: 'entities', value: '# of entities' },\n    { id: 'properties', value: '# of properties' },\n    { id: 'classes', value: '# of classes' }];\n\n  ngOnInit() {\n    this.displayedColumns = this.columnNames.map(x => x.id);\n    this.datasetsInfo.datasetSelected = null;\n    this.sparql.getAllDatasetsInfo(this, null, null);\n  }\n\n  applyFilterTable(filterValue: string) {\n    this.datasetsInfo.datasetsTableDataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n\nexport interface Element {\n  datasetId: string;\n  dateGenerated: string;\n  triples: number;\n  entities: number;\n  properties: number;\n  classes: number;\n}\n","module.exports = \"<div class=\\\"mainLayout\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"80%\\\" fxFlex.xs=\\\"100%\\\" fxLayoutWrap fxLayoutGap=\\\"3%\\\" style=\\\"text-align: left;\\\"\\n  *ngIf=\\\"describeHash != undefined\\\">\\n    <h1 class=\\\"mat-display-1\\\" style=\\\"text-align:center; padding-top: 20px; padding-bottom: 20px;\\\"\\n    [innerHTML]=\\\"sparql.getUrlHtml(uriToDescribe)\\\">\\n    </h1>\\n\\n    <!-- class=\\\"mat-elevation-z8\\\" -->\\n    <mat-accordion [multi]=\\\"true\\\">\\n      <mat-expansion-panel [expanded]=\\\"true\\\" class=\\\"mat-elevation-z6\\\"\\n      *ngFor=\\\"let describeGraph of Object.keys(describeHash)\\\">\\n        <mat-expansion-panel-header>\\n          <div fxLayout=\\\"column\\\" fxFlex style=\\\"text-align: center; margin-top: 15px;\\\">\\n            <span class=\\\"mat-headline\\\" [innerHTML]=\\\"sparql.getUrlHtml(describeGraph)\\\">\\n            </span>\\n          </div>\\n        </mat-expansion-panel-header>\\n\\n        <mat-tab-group>\\n          <mat-tab label=\\\"As subject\\\">\\n            <div style=\\\"margin-top: 25px;\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutWrap\\n              *ngFor=\\\"let describeProperty of Object.keys(describeHash[describeGraph].asSubject)\\\">\\n                <div fxFlex=\\\"50%\\\" style=\\\"text-align: right; padding-right: 60px;\\\">\\n                  <h3 matLine [innerHTML]=\\\"sparql.getUrlHtml(describeProperty)\\\"></h3>\\n                </div>\\n                <mat-divider [vertical]=\\\"true\\\" style=\\\"margin-bottom: 15px; margin-top: 5px; margin-right: 20px;\\\"></mat-divider>\\n                <div fxFlex=\\\"50%\\\">\\n                  <h3 matLine style=\\\"margin-bottom: 5px;\\\"\\n                  *ngFor=\\\"let describeAsSubject of describeHash[describeGraph].asSubject[describeProperty]\\\"\\n                  [innerHTML]=\\\"sparql.getUrlHtml(describeAsSubject)\\\">\\n                  </h3>\\n                </div>\\n              </div>\\n            </div>\\n          </mat-tab>\\n\\n          <mat-tab label=\\\"As predicate\\\">\\n            <div style=\\\"text-align: center; margin-top: 20px;\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutWrap\\n              *ngFor=\\\"let describeSubject of Object.keys(describeHash[describeGraph].asPredicate)\\\">\\n\\n                <div fxFlex=\\\"33%\\\">\\n                  <h3 matLine [innerHTML]=\\\"sparql.getUrlHtml(describeSubject)\\\"></h3>\\n                </div>\\n                <div fxFlex=\\\"33%\\\">\\n                  <h3 matLine [innerHTML]=\\\"sparql.getUrlHtml(uriToDescribe)\\\"></h3>\\n                </div>\\n                <div fxFlex=\\\"33%\\\">\\n                  <h3 matLine\\n                  *ngFor=\\\"let describeAsPredicate of describeHash[describeGraph].asPredicate[describeSubject]\\\"\\n                  [innerHTML]=\\\"sparql.getUrlHtml(describeAsPredicate)\\\">\\n                  </h3>\\n                </div>\\n              </div>\\n            </div>\\n          </mat-tab>\\n\\n          <mat-tab label=\\\"As object\\\">\\n            <div style=\\\"text-align: center;\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutWrap style=\\\"padding-top: 20px; padding-bottom: 20px;\\\"\\n              *ngFor=\\\"let describeProperty of Object.keys(describeHash[describeGraph].asObject)\\\">\\n\\n                <div fxFlex=\\\"33%\\\">\\n                  <h3 matLine style=\\\"text-align: right; padding-right: 20px; margin-bottom: 5px;\\\"\\n                  *ngFor=\\\"let describeAsObject of describeHash[describeGraph].asObject[describeProperty]\\\"\\n                  [innerHTML]=\\\"sparql.getUrlHtml(describeAsObject)\\\">\\n                  </h3>\\n                </div>\\n                <mat-divider [vertical]=\\\"true\\\" style=\\\"margin-bottom: 15px; margin-top: 5px; margin-right: 20px;\\\"></mat-divider>\\n                <div fxFlex=\\\"33%\\\">\\n                  <h3 matLine [innerHTML]=\\\"sparql.getUrlHtml(describeProperty)\\\"></h3>\\n                </div>\\n                <div fxFlex=\\\"33%\\\">\\n                  <h3 matLine [innerHTML]=\\\"sparql.getUrlHtml(uriToDescribe)\\\"></h3>\\n                </div>\\n              </div>\\n            </div>\\n          </mat-tab>\\n\\n        </mat-tab-group>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rlc2NyaWJlL2Rlc2NyaWJlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SparqlService } from '../../sparql.service';\n\nimport {MatExpansionModule} from '@angular/material/expansion';\n\n@Component({\n  selector: 'app-describe',\n  templateUrl: './describe.component.html',\n  styleUrls: ['./describe.component.scss']\n})\nexport class DescribeComponent implements OnInit {\n  Object = Object; // To iterate over hash in html\n  uriToDescribe: string;\n  describeHash: {};\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private sparql: SparqlService\n    ) {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.uriToDescribe = params.uri;\n    });\n  }\n\n  ngOnInit() {\n    this.sparql.describeUri(this.uriToDescribe)\n      .subscribe(data => {\n        const sparqlResultArray = data['results']['bindings'];\n        this.describeHash = {};\n\n        // Build describe object\n        // {graph1: {asSubject: {property1: [object1, object2]}, asObject: {property1: [subject1]}}}\n        sparqlResultArray.forEach((sparqlResultRow: any, index: number) => {\n          // SPO case. Described URI is the subject\n          if (!('subject' in sparqlResultRow)) {\n            if (!(sparqlResultRow.graph.value in this.describeHash)) {\n              this.describeHash[sparqlResultRow.graph.value] = {asSubject: {}, asObject: {}, asPredicate: {}};\n            }\n            if (!(sparqlResultRow.predicate.value in this.describeHash[sparqlResultRow.graph.value].asSubject)) {\n              this.describeHash[sparqlResultRow.graph.value].asSubject[sparqlResultRow.predicate.value] = [];\n            }\n            if (this.describeHash[sparqlResultRow.graph.value].asSubject[sparqlResultRow.predicate.value].length < 5) {\n              this.describeHash[sparqlResultRow.graph.value].asSubject[sparqlResultRow.predicate.value].push(sparqlResultRow.object.value);\n            }\n          }\n\n          // OPS case. Described URI is the object\n          if (!('object' in sparqlResultRow)) {\n            if (!(sparqlResultRow.graph.value in this.describeHash)) {\n              this.describeHash[sparqlResultRow.graph.value] = {asSubject: {}, asObject: {}, asPredicate: {}};\n            }\n            if (!(sparqlResultRow.predicate.value in this.describeHash[sparqlResultRow.graph.value].asObject)) {\n              this.describeHash[sparqlResultRow.graph.value].asObject[sparqlResultRow.predicate.value] = [];\n            }\n            if (this.describeHash[sparqlResultRow.graph.value].asObject[sparqlResultRow.predicate.value].length < 5) {\n              this.describeHash[sparqlResultRow.graph.value].asObject[sparqlResultRow.predicate.value].push(sparqlResultRow.subject.value);\n            }\n          }\n\n          // Described URI is the predicate (PSO?)\n          if (!('predicate' in sparqlResultRow)) {\n            if (!(sparqlResultRow.graph.value in this.describeHash)) {\n              this.describeHash[sparqlResultRow.graph.value] = {asSubject: {}, asObject: {}, asPredicate: {}};\n            }\n            if (!(sparqlResultRow.subject.value in this.describeHash[sparqlResultRow.graph.value].asPredicate)) {\n              this.describeHash[sparqlResultRow.graph.value].asPredicate[sparqlResultRow.subject.value] = [];\n            }\n            if (this.describeHash[sparqlResultRow.graph.value].asPredicate[sparqlResultRow.subject.value].length < 5) {\n              this.describeHash[sparqlResultRow.graph.value].asPredicate[sparqlResultRow.subject.value].push(sparqlResultRow.object.value);\n            }\n          }\n        });\n        console.log('describe object:');\n        console.log(this.describeHash);\n      });\n  }\n\n}\n","module.exports = \"<!-- <footer style=\\\"background-color: #ddd;\\\" class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n      <p class=\\\"footer-copyright\\\" i18n=\\\"footer | copyright\\\">© 2017-2019 foundation Aphasia Help</p>\\n      <p i18n=\\\"footer | compliant\\\">This website is compliant to the <a href=\\\"https://www.nvlf.nl/stream/richtlijnafasieck18-03.pdf\\\">Logopedische richtlijn Diagnostiek en behandeling van afasie bij volwassenen</a></p>\\n      <div class=\\\"column cc-footer-license\\\">\\n        <div class=\\\"license-icons\\\">\\n        <a class=\\\"text-secondary\\\" rel=\\\"license\\\" href=\\\"https://creativecommons.org/licenses/by/4.0/\\\" title=\\\"Creative Commons Attribution 4.0 International license\\\" target=\\\"_blank\\\">\\n          <img src=\\\"/assets/images/cc-by-nc.svg\\\" alt=\\\"the team\\\"> \\n        </a>\\n        </div>\\n        <aside>\\n        <div xmlns:cc=\\\"https://creativecommons.org/ns#\\\" about=\\\"https://creativecommons.org\\\">\\n        <p i18n=\\\"footer | creative comments\\\">Except where otherwise <a class=\\\"subfoot text-secondary\\\" href=\\\"/policies#license\\\">noted</a>, content on this site is licensed under a <a class=\\\"subfoot text-secondary\\\" href=\\\"https://creativecommons.org/licenses/by/4.0/\\\" rel=\\\"license\\\">Creative Commons Attribution 4.0 International license</a>.</p>\\n        </div>\\n        </aside>\\n      </div>\\n  </div>\\n</footer> -->\\n\\n<!-- class primaryColorBG -->\\n<footer class=\\\"docs-footer primaryColorBG\\\"\\n        [class.is-next-version]=\\\"isNextVersion\\\">\\n  <div class=\\\"docs-footer-list\\\">\\n    <div class=\\\"docs-footer-logo\\\">\\n      <p i18n=\\\"footer | creative comments\\\">Except where otherwise <a class=\\\"subfoot text-secondary\\\" href=\\\"/policies#license\\\">noted</a>,\\n        content on this site is licensed under a <a class=\\\"subfoot text-secondary\\\" href=\\\"https://raw.githubusercontent.com/MaastrichtU-IDS/rdf-graph-explorer/master/LICENSE\\\" rel=\\\"license\\\">\\n          MIT license</a>.\\n      </p>\\n    </div>\\n\\n    <div class=\\\"docs-footer-version\\\">\\n      <a class=\\\"text-secondary\\\" rel=\\\"license\\\" title=\\\"MIT license\\\" target=\\\"_blank\\\"\\n      href=\\\"https://raw.githubusercontent.com/MaastrichtU-IDS/rdf-graph-explorer/master/LICENSE\\\">\\n        <img src=\\\"/assets/images/mit_license.png\\\" alt=\\\"MIT license\\\" style=\\\"max-height: 60px;\\\"> \\n      </a>\\n    </div>\\n\\n    <div class=\\\"docs-footer-copyright\\\">\\n      <!-- <span>Institute of Data Science at Maastricht University ©2018-2019</span> -->\\n      <p i18n=\\\"footer | compliant\\\">\\n        Institute of Data Science at Maastricht University ©2018-2019\\n      </p>\\n    </div>\\n  </div>\\n</footer>\"","module.exports = \".docs-footer {\\n  padding: 12px;\\n  font-size: 16px;\\n  margin-top: 40px; }\\n\\n.docs-footer-list {\\n  align-items: center;\\n  display: flex;\\n  flex-flow: row wrap;\\n  padding: 8px; }\\n\\n.docs-footer-logo {\\n  flex: 1; }\\n\\n.docs-footer-angular-logo {\\n  height: 50px; }\\n\\n.docs-footer-version {\\n  flex: 1;\\n  text-align: center; }\\n\\n.docs-footer-copyright {\\n  display: flex;\\n  flex: 1;\\n  justify-content: flex-end;\\n  flex-direction: column;\\n  min-width: 225px;\\n  text-align: center; }\\n\\n.docs-footer-logo span {\\n  display: inline-block;\\n  line-height: 50px;\\n  margin: 0 40px;\\n  vertical-align: bottom; }\\n\\n.docs-footer-logo span a {\\n    font-size: 16px;\\n    padding: 0; }\\n\\na {\\n  text-decoration: none;\\n  color: inherit; }\\n\\na:hover {\\n    text-decoration: underline; }\\n\\n@media screen and (max-width: 884px) {\\n  .docs-footer-list {\\n    flex-direction: column; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlbW9uZXQva3Jha2VuL3JkZi1ncmFwaC1leHBsb3Jlci9zcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2IsZUFBZTtFQUNmLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFlBQVksRUFBQTs7QUFHZDtFQUNFLE9BQU8sRUFBQTs7QUFHVDtFQUNFLFlBQVksRUFBQTs7QUFHZDtFQUNFLE9BQU87RUFDUCxrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxhQUFhO0VBQ2IsT0FBTztFQUNQLHlCQUF5QjtFQUN6QixzQkFBc0I7RUFDdEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLHFCQUFxQjtFQUNyQixpQkFBaUI7RUFDakIsY0FBYztFQUNkLHNCQUFzQixFQUFBOztBQUp4QjtJQU9JLGVBQWU7SUFDZixVQUFVLEVBQUE7O0FBSWQ7RUFDRSxxQkFBcUI7RUFDckIsY0FBYyxFQUFBOztBQUZoQjtJQUtJLDBCQUEwQixFQUFBOztBQUk5QjtFQUNFO0lBQ0Usc0JBQXNCLEVBQUEsRUFDdkIiLCJmaWxlIjoic3JjL2FwcC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRvY3MtZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xuICB9XG4gIFxuICAuZG9jcy1mb290ZXItbGlzdCB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgcGFkZGluZzogOHB4O1xuICB9XG4gIFxuICAuZG9jcy1mb290ZXItbG9nbyB7XG4gICAgZmxleDogMTtcbiAgfVxuICBcbiAgLmRvY3MtZm9vdGVyLWFuZ3VsYXItbG9nbyB7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICB9XG4gIFxuICAuZG9jcy1mb290ZXItdmVyc2lvbiB7XG4gICAgZmxleDogMTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5kb2NzLWZvb3Rlci1jb3B5cmlnaHQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleDogMTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWluLXdpZHRoOiAyMjVweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5kb2NzLWZvb3Rlci1sb2dvIHNwYW4ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBsaW5lLWhlaWdodDogNTBweDtcbiAgICBtYXJnaW46IDAgNDBweDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICBcbiAgICBhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuICB9XG4gIFxuICBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gIFxuICAgICY6aG92ZXIge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuICB9XG4gIFxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4ODRweCl7XG4gICAgLmRvY3MtZm9vdGVyLWxpc3Qge1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 250px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n.navbar-button {\\n  font-size: 17px;\\n}\\n\\n.flex-spacer {\\n  flex-grow: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi1uYXYvbWFpbi1uYXYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7RUFDWixxQ0FBcUM7QUFDdkM7O0FBRUE7RUFDRSx3QkFBZ0I7RUFBaEIsZ0JBQWdCO0VBQ2hCLE1BQU07RUFDTixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvbWFpbi1uYXYvbWFpbi1uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnNpZGVuYXYge1xuICB3aWR0aDogMjUwcHg7XG4gIGJveC1zaGFkb3c6IDNweCAwIDZweCByZ2JhKDAsMCwwLC4yNCk7XG59XG5cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTtcbn1cblxuLm5hdmJhci1idXR0b24ge1xuICBmb250LXNpemU6IDE3cHg7XG59XG5cbi5mbGV4LXNwYWNlciB7XG4gIGZsZXgtZ3JvdzogMTtcbn0iXX0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\">\\n  <button mat-flat-button class=\\\"navbar-button\\\" routerLink=\\\"/\\\">rdf-graph-explorer</button>\\n  <a mat-button class=\\\"navbar-button\\\" routerLink=\\\"/\\\" aria-label=\\\"Explore datasets\\\">\\n    <mat-icon mat-list-icon>explore</mat-icon>\\n    Explore datasets\\n  </a>\\n  <a mat-button class=\\\"navbar-button\\\" routerLink=\\\"/sparql\\\" aria-label=\\\"YASGUI SPARQL\\\">\\n    <mat-icon mat-list-icon>share</mat-icon>\\n    Run SPARQL queries\\n  </a>\\n  <a mat-button class=\\\"navbar-button\\\" routerLink=\\\"/describe\\\" [queryParams]=\\\"{uri:'http://identifiers.org/uniprot/O00222'}\\\" aria-label=\\\"Describe URI\\\">\\n    <mat-icon mat-list-icon>search</mat-icon>\\n    Describe URI\\n  </a>\\n  <div class=\\\"flex-spacer\\\"></div>\\n  <a mat-button class=\\\"navbar-button\\\" href=\\\"https://github.com/MaastrichtU-IDS/rdf-graph-explorer\\\" target=\\\"_blank\\\" aria-label=\\\"Source on GitHub\\\">\\n    <mat-icon mat-list-icon>code</mat-icon>\\n    Source on GitHub\\n  </a>\\n</mat-toolbar>\\n\\n\\n  <!-- Dropdown menu\\n  <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\n    <mat-icon mat-list-icon>more_horiz</mat-icon>\\n    More\\n  </button>\\n  <mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item aria-label=\\\"Contact\\\">\\n      <a href=\\\"contact\\\">\\n        <mat-icon mat-list-icon>email</mat-icon>\\n        <span mat-h1>Contact</span>\\n      </a>\\n    </button>\\n  </mat-menu> -->\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatasetsInfoService } from '../../datasets-info.service';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css']\n})\nexport class MainNavComponent {\n  title = 'rdf-graph-explorer';\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver,\n              private datasetsInfo: DatasetsInfoService) {}\n\n  applyFilterNav(filterValue: string) {\n    this.datasetsInfo.arrayDatasetsNav = Object.keys(this.datasetsInfo.hashAll);\n\n    this.datasetsInfo.arrayDatasetsNav = this.datasetsInfo.arrayDatasetsNav\n      .filter(item => item.includes(filterValue.trim().toLowerCase()));\n    console.log('after filter');\n    console.log(this.datasetsInfo.arrayDatasetsNav);\n  }\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"80%\\\" fxFlex.xs=\\\"100%\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\"\\n  style=\\\"text-align: left; margin-bottom: 20px; margin-top: 35px; \\\">\\n    <div id=\\\"yasguiDiv\\\"></div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwYXJxbC9zcGFycWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { AfterViewInit, Component } from '@angular/core';\n//  OnInit\ndeclare const YASGUI: any;\n\n@Component({\n  selector: 'app-sparql',\n  templateUrl: './sparql.component.html',\n  styleUrls: [\n    './sparql.component.scss'\n  ]\n})\nexport class SparqlComponent implements AfterViewInit {\n\n  statisticsQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n  PREFIX dct: <http://purl.org/dc/terms/>\n  PREFIX bl: <http://w3id.org/biolink/vocab/>\n  PREFIX dctypes: <http://purl.org/dc/dcmitype/>\n  PREFIX idot: <http://identifiers.org/idot/>\n  PREFIX dcat: <http://www.w3.org/ns/dcat#>\n  PREFIX void: <http://rdfs.org/ns/void#>\n  SELECT distinct ?source ?statements ?entities ?properties ?classes ?graph\n  WHERE {\n    GRAPH ?g {\n      ?dataset a dctypes:Dataset ; idot:preferredPrefix ?source .\n      ?version dct:isVersionOf ?dataset ; dcat:distribution ?rdfDistribution .\n      ?rdfDistribution a void:Dataset ;\n        dcat:accessURL ?graph ;\n        void:triples ?statements ;\n        void:entities ?entities ;\n        void:properties ?properties .\n      ?rdfDistribution void:classPartition [\n        void:class rdfs:Class ;\n        void:distinctSubjects ?classes\n      ] .\n    }\n  } ORDER BY DESC(?statements)`;\n\n  entitiesRelationsQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n  PREFIX dct: <http://purl.org/dc/terms/>\n  PREFIX dctypes: <http://purl.org/dc/dcmitype/>\n  PREFIX idot: <http://identifiers.org/idot/>\n  PREFIX dcat: <http://www.w3.org/ns/dcat#>\n  PREFIX void: <http://rdfs.org/ns/void#>\n  PREFIX void-ext: <http://ldf.fi/void-ext#>\n  SELECT distinct ?source ?classCount1 ?class1 ?relationWith ?classCount2 ?class2\n  WHERE {\n    GRAPH ?g {\n      ?dataset a dctypes:Dataset ; idot:preferredPrefix ?source .\n      ?version dct:isVersionOf ?dataset ; dcat:distribution ?rdfDistribution .\n      ?rdfDistribution a void:Dataset ;\n        dcat:accessURL ?graph .\n      ?rdfDistribution void:classPartition [\n        void:class rdfs:Class ;\n        void:distinctSubjects ?classes\n      ] .\n      ?rdfDistribution void:propertyPartition [\n          void:property ?relationWith ;\n          void:classPartition [\n              void:class ?class1 ;\n              void:distinctSubjects ?classCount1 ;\n          ];\n          void-ext:objectClassPartition [\n            void:class ?class2 ;\n            void:distinctObjects ?classCount2 ;\n      ]] .\n    }\n  } ORDER BY ?source DESC(?classCount1) DESC(?classCount2)`;\n\n  constructor() { }\n\n  ngAfterViewInit() {\n    YASGUI.defaults.yasqe.sparql.endpoint = 'http://graphdb.dumontierlab.com/repositories/test';\n    // var config = {\"api\":{\"urlShortener\":\"//yasgui.org/shorten\"}};\n    const yasgui = YASGUI(document.getElementById('yasguiDiv'));\n    yasgui.addTab('statisticsTab');\n    yasgui.selectTab('statisticsTab').rename('Graphs statistics');\n    yasgui.selectTab('statisticsTab').setQuery(this.statisticsQuery);\n    yasgui.addTab('entitiesRelationsTab');\n    yasgui.selectTab('entitiesRelationsTab').rename('Explore entities relations');\n    yasgui.selectTab('entitiesRelationsTab').setQuery(this.entitiesRelationsQuery);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatasetsInfoService {\n\n  hashAll: any = {};\n  datasets: any;\n  datasetSelected: any;\n  datasetsTableDataSource: any;\n  relationsTableDataSource: any;\n  arrayDatasetsNav: any;\n  filteredArrayDatasetsNav: any;\n\n  constructor(private router: Router) { }\n\n  navigateTo(dataset: string) {\n    let urlPath: string = '/dataset/' + dataset;\n    if (dataset == ''){\n      urlPath = '';\n    }\n\n    // Keep only the info of the selected dataset\n    this.datasetSelected = this.datasets.filter(\n      datasetFilter => datasetFilter.source.value === dataset)[0];\n\n    this.router.navigateByData({\n      url: [urlPath],\n      data: { datasetsInfo: this }\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { MatTableDataSource, MatSort } from '@angular/material';\n\nimport 'rxjs/add/operator/map';\n\nimport { DatasetsInfoService } from './datasets-info.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SparqlService {\n\n  // TODO: make it a parameter\n  private sparqlEndpoint: string = 'http://graphdb.dumontierlab.com/repositories/ncats-red-kg';\n\n  public prefixRegistry = {\n    bl: 'http://w3id.org/biolink/vocab/',\n    biolink: 'https://w3id.org/biolink/vocab/',\n    d2s: 'https://w3id.org/data2services/',\n    rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n    dc: 'http://purl.org/dc/elements/1.1/',\n    obo: 'http://purl.obolibrary.org/obo/',\n    owl: 'http://www.w3.org/2002/07/owl#'\n  };\n\n  constructor(private http: HttpClient,\n              private datasetsInfo: DatasetsInfoService) { }\n\n  getAllDatasetsInfo(overviewComponent: any, detailComponent: any, datasetId: string) {\n    console.log('getAllDatasetsInfo (execute SPARQL query)');\n\n    const httpHeaders = new HttpHeaders({\n      'Content-type': 'application/x-www-form-urlencoded'\n      //'Accept': 'application/json'\n    });\n\n    // Define SPARQL query to retrieve informations on datasets\n    const datasetSparqlHttpParams = new HttpParams()\n      .set('query', `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX dct: <http://purl.org/dc/terms/>\n      PREFIX bl: <http://w3id.org/biolink/vocab/>\n      PREFIX dctypes: <http://purl.org/dc/dcmitype/>\n      PREFIX idot: <http://identifiers.org/idot/>\n      PREFIX dcat: <http://www.w3.org/ns/dcat#>\n      PREFIX void: <http://rdfs.org/ns/void#>\n      PREFIX dc: <http://purl.org/dc/elements/1.1/>\n      PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n      PREFIX void-ext: <http://ldf.fi/void-ext#>\n      SELECT DISTINCT ?source ?description ?homepage ?dateGenerated ?statements ?entities ?properties ?classes ?graph\n      WHERE {\n        GRAPH ?g {\n          ?dataset a dctypes:Dataset ;\n            dct:description ?description ;\n            foaf:page ?homepage ;\n            idot:preferredPrefix ?source .\n          ?version dct:isVersionOf ?dataset ; \n            dcat:distribution ?rdfDistribution .\n          ?rdfDistribution a void:Dataset ;\n            dcat:accessURL ?graph ;\n            void:triples ?statements ;\n            void:entities ?entities ;\n            void:properties ?properties ;\n            dct:issued ?dateGenerated .\n          ?rdfDistribution void:classPartition [\n            void:class rdfs:Class ;\n            void:distinctSubjects ?classes\n          ] .\n        }\n      } ORDER BY DESC(?statements)`)\n      .set('format', 'json');\n\n    const relationSparqlHttpParams = new HttpParams()\n      .set('query', `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX dct: <http://purl.org/dc/terms/>\n      PREFIX bl: <http://w3id.org/biolink/vocab/>\n      PREFIX dctypes: <http://purl.org/dc/dcmitype/>\n      PREFIX idot: <http://identifiers.org/idot/>\n      PREFIX dcat: <http://www.w3.org/ns/dcat#>\n      PREFIX void: <http://rdfs.org/ns/void#>\n      PREFIX dc: <http://purl.org/dc/elements/1.1/>\n      PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n      PREFIX void-ext: <http://ldf.fi/void-ext#>\n      SELECT DISTINCT ?source ?graph ?classCount1 ?class1 ?relationWith ?classCount2 ?class2\n      WHERE {\n        GRAPH ?g {\n          ?dataset a dctypes:Dataset ;\n            idot:preferredPrefix ?source .\n          ?version dct:isVersionOf ?dataset ; \n            dcat:distribution ?rdfDistribution .\n          ?rdfDistribution a void:Dataset ;\n            dcat:accessURL ?graph .\n          ?rdfDistribution void:propertyPartition [\n              void:property ?relationWith ;\n              void:classPartition [\n                  void:class ?class1 ;\n                  void:distinctSubjects ?classCount1 ;\n              ];\n              void-ext:objectClassPartition [\n                void:class ?class2 ;\n                void:distinctObjects ?classCount2 ;\n          ]] .\n        }\n      } ORDER BY DESC(?classCount1)`)\n      .set('format', 'json');\n\n    // Execute SPARQL query using HTTP GET\n    this.http.get(this.sparqlEndpoint, { params: datasetSparqlHttpParams, headers: httpHeaders})\n      .subscribe(data => {\n        const sparqlResultArray = data['results']['bindings'];\n        this.datasetsInfo.hashAll = {};\n\n        // Map the SPARQL query results to an object for each dataset in datasetsInfo.hashAll\n        sparqlResultArray.forEach((sparqlResultRow: any, index: number) => {\n          const datasetId = sparqlResultRow.source.value;\n          if (this.datasetsInfo.hashAll[datasetId] == null) {\n            this.datasetsInfo.hashAll[datasetId] = {};\n            this.datasetsInfo.hashAll[datasetId].datasetId = datasetId;\n            this.datasetsInfo.hashAll[datasetId].source = sparqlResultRow.source;\n            this.datasetsInfo.hashAll[datasetId].relationsArray = [];\n          }\n          this.datasetsInfo.hashAll[datasetId].description = sparqlResultRow.description;\n          this.datasetsInfo.hashAll[datasetId].homepage = sparqlResultRow.homepage;\n          this.datasetsInfo.hashAll[datasetId].dateGenerated = sparqlResultRow.dateGenerated;\n          this.datasetsInfo.hashAll[datasetId].statements = sparqlResultRow.statements;\n          this.datasetsInfo.hashAll[datasetId].entities = sparqlResultRow.entities;\n          this.datasetsInfo.hashAll[datasetId].properties = sparqlResultRow.properties;\n          this.datasetsInfo.hashAll[datasetId].classes = sparqlResultRow.classes;\n          this.datasetsInfo.hashAll[datasetId].graph = sparqlResultRow.graph;\n          // Be careful when multiple entries for a source\n          const dateGenerated: Date = new Date(sparqlResultRow.dateGenerated.value);\n          this.datasetsInfo.hashAll[datasetId].displayDateGenerated = dateGenerated.getFullYear() + '-'\n            + (dateGenerated.getMonth() + 1).toString() + '-' + dateGenerated.getDate().toString();\n          // TO REMOVE: if (this.datasetsInfo.hashAll[datasetId].relationsArray == null) {\n          //  this.datasetsInfo.hashAll[datasetId].relationsArray = [];\n          //}\n        });\n\n        // Get relations for each dataset\n        this.http.get(this.sparqlEndpoint, { params: relationSparqlHttpParams, headers: httpHeaders})\n          .subscribe(relationData => {\n            const relationSparqlResultArray = relationData['results']['bindings'];\n            relationSparqlResultArray.forEach((sparqlResultRow: any, index: number) => {\n              const datasetId = sparqlResultRow.source.value;\n              this.datasetsInfo.hashAll[datasetId].relationsArray.push({\n                classCount1: sparqlResultRow.classCount1,\n                class1: sparqlResultRow.class1,\n                relationWith: sparqlResultRow.relationWith,\n                classCount2: sparqlResultRow.classCount2,\n                class2: sparqlResultRow.class2\n              });\n            });\n\n            // Now generate array and tables for overview and relations from hash to avoid duplicates\n            this.datasetsInfo.arrayDatasetsNav = Object.keys(this.datasetsInfo.hashAll);\n            this.datasetsInfo.datasets = [];\n            const tableArr: Element[] = [];\n            for (const key in this.datasetsInfo.hashAll) {\n              if (this.datasetsInfo.hashAll.hasOwnProperty(key)) {\n                // Add dataset hash to an array of datasets (to have array and hash available)\n                this.datasetsInfo.datasets.push(this.datasetsInfo.hashAll[key]);\n                // Generate the array for datasets details tables\n                tableArr.push({ datasetId: this.datasetsInfo.hashAll[key].source.value,\n                  dateGenerated: this.datasetsInfo.hashAll[key].displayDateGenerated,\n                  triples: this.datasetsInfo.hashAll[key].statements.value,\n                  entities: this.datasetsInfo.hashAll[key].entities.value,\n                  properties: this.datasetsInfo.hashAll[key].properties.value,\n                  classes: this.datasetsInfo.hashAll[key].classes.value\n                });\n                const relationsArr: RelationElement[] = [];\n                let relationCount = 0;\n                this.datasetsInfo.hashAll[key].ngxGraph = {nodes: [], edges: []};\n                this.datasetsInfo.hashAll[key].relationsArray.forEach( (element) => {\n                  // Generate the array for datasets relations tables\n                  relationsArr.push({\n                    classCount1: element.classCount1.value,\n                    class1: element.class1.value,\n                    relationWith: element.relationWith.value,\n                    class2: element.class2.value,\n                    classCount2: element.classCount2.value\n                  });\n                  // Generate the hash for the ngx-graph\n                  console.log('hashes:');\n                  console.log(this.cleanUrl(element.class1.value));\n                  console.log(this.cleanUrl(element.class2.value));\n                  // TODO: We need to generate a hash to make sure nodes are uniques. Or try 2 SPARQL queries\n                  if (this.cleanUrl(element.class1.value) !== this.cleanUrl(element.class2.value)) {\n                    relationCount = relationCount + 1;\n\n                    // avoid duplicate nodes\n                    if (this.datasetsInfo.hashAll[key].ngxGraph.nodes.findIndex(x => x.id === this.cleanUrl(element.class1.value)) === -1) {\n                      this.datasetsInfo.hashAll[key].ngxGraph.nodes.push(\n                        {data: {id: this.cleanUrl(element.class1.value), name: element.class1.value, \n                          faveColor: '#F5A45D', faveShape: 'rectangle'}}\n                      );\n                    }\n                    if (this.datasetsInfo.hashAll[key].ngxGraph.nodes.findIndex(x => x.id === this.cleanUrl(element.class2.value)) === -1) {\n                      this.datasetsInfo.hashAll[key].ngxGraph.nodes.push(\n                        {data: {id: this.cleanUrl(element.class2.value), name: element.class2.value, \n                          faveColor: '#F5A45D', faveShape: 'rectangle'}}\n                      );\n                    }\n                    this.datasetsInfo.hashAll[key].ngxGraph.edges.push(\n                      {data: {source: this.cleanUrl(element.class1.value), faveColor: '#6FB1FC',\n                      target: this.cleanUrl(element.class2.value)}}\n                      // {\n                      //   id: relationCount.toString(),\n                      //   source: this.cleanUrl(element.class1.value),\n                      //   target: this.cleanUrl(element.class2.value),\n                      //   label: element.relationWith.value\n                      // }\n                    );\n                  }\n                });\n                this.datasetsInfo.hashAll[key].relationsTableDataSource = new MatTableDataSource(relationsArr);\n                // this.datasetsInfo.datasetSelected.relationsTableDataSource = new MatTableDataSource(relationsArr);\n                if (detailComponent != null) {\n                  // this.datasetsInfo.hashAll[key].relationsTableDataSource.sort = detailComponent.sort;\n                  console.log('detailComponent:');\n                  console.log(detailComponent);\n                  // console.log(detailComponent.sortRelations);\n                  // this.datasetsInfo.datasetSelected.relationsTableDataSource.sort = detailComponent['sortRelations'];\n\n                  // This one should work but says detailComponent is undefined:\n                  // this.datasetsInfo.hashAll[key].relationsTableDataSource.sortRelations = detailComponent.sortRelations;\n                  // this.datasetsInfo.hashAll[key].relationsTableDataSource.sort = detailComponent.sort;\n                  this.datasetsInfo.hashAll[key].relationsTableDataSource.sort = detailComponent.sort;\n                }\n              }\n            }\n            if (datasetId != null) {\n              this.datasetsInfo.datasetSelected = this.datasetsInfo.hashAll[datasetId];\n            }\n            this.datasetsInfo.datasetsTableDataSource = new MatTableDataSource(tableArr);\n            // Sort for overview and define selected dataset if a dataset has been selected\n            if (overviewComponent != null) {\n              console.log('overviewComponent:');\n              console.log(overviewComponent);\n              console.log(overviewComponent.sort);\n              this.datasetsInfo.datasetsTableDataSource.sort = overviewComponent.sort;\n            }\n            console.log('After getting the SPARQL query in sparql.service. datasetsInfo:');\n            console.log(this.datasetsInfo);\n\n          });\n      });\n  }\n\n  describeUri(uriToDescribe: string) {\n    console.log('DescribeURI: ' + uriToDescribe);\n\n    const httpHeaders = new HttpHeaders({\n      'Content-type': 'application/x-www-form-urlencoded'\n    });\n\n    // Define SPARQL query to retrieve statements about the URI to describe\n    const describeSparqlHttpParams = new HttpParams()\n      .set('query', `SELECT DISTINCT ?subject ?predicate ?object ?graph WHERE {\n        {\n            GRAPH ?graph {\n              <` + uriToDescribe + `> ?predicate ?object .\n            }\n        } UNION {\n            GRAPH ?graph {\n              ?subject ?predicate <` + uriToDescribe + `> .\n            }\n        } UNION {\n          GRAPH ?graph {\n            ?subject <` + uriToDescribe + `> ?object .\n          }\n      }\n    } LIMIT 1000`).set('format', 'json');\n\n    // Execute SPARQL query using HTTP GET\n    return this.http.get(this.sparqlEndpoint, { params: describeSparqlHttpParams, headers: httpHeaders});\n  }\n\n\n\n  private cleanUrl(urlToClean: string) {\n    return urlToClean.replace(/\\//gi, '').replace(':', '');\n  }\n\n  // resolve URI namespace to use a prefix and add link to full URI\n  public getUrlHtml(urlToRender: string) {\n    if (urlToRender.startsWith('http://') || urlToRender.startsWith('https://')) {\n      // TODO: make describe endpoint URL it a variable\n\n      const prefixUrlToRender = `<a href=\"http://localhost:4200/describe?uri=`\n      + urlToRender + `\" class=\"describeUrl\">`;\n      // console.log(prefixUrlToRender);\n\n      for (const prefix in this.prefixRegistry) {\n        if (urlToRender.startsWith(this.prefixRegistry[prefix])) {\n          return prefixUrlToRender + urlToRender.replace(this.prefixRegistry[prefix], prefix + ':') + '</a>';\n        }\n      }\n      return prefixUrlToRender + urlToRender + '</a>';\n    }\n    return urlToRender;\n  }\n\n  // only resolve URI namespace to use a prefix (to factorise)\n  // public shortenUri(uriToShorten: string) {\n  //   for (const prefix in this.prefixRegistry) {\n  //     if (uriToShorten.startsWith(this.prefixRegistry[prefix])) {\n  //       return uriToShorten.replace(this.prefixRegistry[prefix], prefix + ':');\n  //     }\n  //   }\n  //   return uriToShorten;\n  // }\n}\n\nexport interface Element {\n  datasetId: string;\n  dateGenerated: string;\n  triples: number;\n  entities: number;\n  properties: number;\n  classes: number;\n}\n\nexport interface RelationElement {\n  classCount1: number;\n  class1: string;\n  relationWith: string;\n  class2: string;\n  classCount2: number;\n}\n"],"sourceRoot":""}